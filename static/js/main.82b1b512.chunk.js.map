{"version":3,"sources":["Components/Header/Header.tsx","Services/RecipeServices.ts","Context/ItemContextProvider.tsx","Components/HomePageSearch/HomePageSearch.tsx","Components/Item/Item.tsx","Components/FoundItems/FoundItems.tsx","Icons/to-favorite.svg","Icons/favorited.svg","Icons/expand.svg","Components/TriangleBorder/TriangleBorder.tsx","Components/DetailedItem/DetailedItem.tsx","Components/Favorites/Favorites.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","to","id","process","key","console","log","fetchAllRecipes","fetchParams","parameters","app_id","app_key","q","type","health","calories","diet","axios","get","params","paramsSerializer","stringify","indices","then","response","data","hits","defaultValue","items","favorites","addFavorite","removeFavorite","fetchRecipes","ItemContext","createContext","ItemContextProvider","children","useState","setItems","setFavorites","useEffect","Provider","value","query","glutenOption","gluten","vegetarianOption","vegetarian","caloriesAmount","balancedOption","balanced","lowFatOption","lowFat","parseInt","item","newFavorites","push","index","splice","HomePageSearch","useContext","searchData","setSearchData","healthOptions","setHealthOptions","calorieCount","setCalorieCount","dietaryOptions","setDietaryOptions","action","onSubmit","e","preventDefault","name","checked","onClick","glutenCheck","htmlFor","vegetarianCheck","balancedCheck","lowFatCheck","min","max","step","onChange","target","ItemComponent","label","src","image","alt","yield","toFixed","FoundItems","map","recipe","TriangleBorder","DetailedItem","useParams","tofavoriteIcon","icon","setIcon","foundItem","find","favorite","favoritedIcon","isActive","setActive","isAlsoActive","setAlsoActive","background","healthLabel","healthLabels","healthLabelSplit","join","ingredientList","ingredientLines","link","url","style","backgroundImage","totalTime","dietLabels","expand","ingredient","pathname","handleFavorites","Favorites","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b1b512.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\r\nimport { VscHeart } from 'react-icons/vsc';\r\n\r\nimport \"../../App.css\";\r\n\r\nfunction Header() {\r\n\r\n\r\n    return (\r\n        <header className=\"Header\">\r\n            <Link to=\"/\"><h1 className=\"MainHead\">Chonk Watchers</h1></Link>\r\n\r\n            <div className=\"Nav\">\r\n                <nav>\r\n                    <ul>\r\n                        <li className=\"HeaderLink\">\r\n                            <NavLink className=\"FavHeader\" to=\"/Favorites\">Favorites <VscHeart /></NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import { Hit } from '../Model/ItemInterface'\r\nimport axios from \"axios\";\r\nimport { QueryParams } from '../Context/ItemContextProvider';\r\nimport { stringify } from 'qs';\r\n\r\n// access API\r\nconst RecipeAPIUrlAll: string = \"https://api.edamam.com/api/recipes/v2\";\r\n\r\n// API KEY AND ID\r\nconst id = process.env.REACT_APP_API_ID;\r\nconst key = process.env.REACT_APP_EDAMAM_API_KEY;\r\nconsole.log(id);\r\nconsole.log(key);\r\n\r\n\r\ninterface Params {\r\n    app_id: string | undefined;\r\n    app_key: string | undefined;\r\n    q: string;\r\n    type: string;\r\n    calories?: number;\r\n    health?: string[];\r\n    diet?: string[];\r\n}\r\n\r\n// grabs all data\r\nexport const fetchAllRecipes = (fetchParams: QueryParams): Promise<Hit[]> => {\r\n    const parameters: Params = {\r\n        app_id: id,\r\n        app_key: key,\r\n        q: fetchParams.q,\r\n        type: \"public\",\r\n        health: fetchParams.health,\r\n        calories: fetchParams.calories,\r\n        diet: fetchParams.diet\r\n    }\r\n\r\n\r\n    return axios.get(RecipeAPIUrlAll, {\r\n        params: parameters, \r\n        paramsSerializer: (params) => stringify(params, {indices: false})\r\n    }).then((response) => {\r\n        return response.data.hits\r\n    })\r\n}\r\n\r\n\r\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { Item, Hit, Query } from \"../Model/ItemInterface\";\r\nimport { fetchAllRecipes } from \"../Services/RecipeServices\";\r\n\r\nexport interface QueryParams {\r\n    q: string;\r\n    calories?: number;\r\n    health?: string[];\r\n    diet?: string[];\r\n}\r\n\r\nexport interface HealthOptionsState {\r\n    gluten?: boolean | undefined;\r\n    vegetarian?: boolean | undefined;\r\n}\r\n\r\nexport interface DietOptionsState {\r\n    balanced?: boolean | undefined;\r\n    lowFat?: boolean | undefined;\r\n}\r\n\r\nexport interface ItemContextModel {\r\n    items: Hit[];\r\n    favorites: Item[];\r\n    addFavorite: (item: Item) => void;\r\n    removeFavorite: (index: number) => void;\r\n    fetchRecipes: ({query, health, diet}: Query) => void;\r\n}\r\n\r\nconst defaultValue: ItemContextModel = {\r\n    items: [],\r\n    favorites: [],\r\n    addFavorite: () => {},\r\n    removeFavorite: () => {},\r\n    fetchRecipes: () => {}\r\n}\r\n\r\nexport const ItemContext = createContext(defaultValue);\r\n\r\nexport const ItemContextProvider = ({children}: {children: ReactNode}) => {\r\n    // set state and pass to children\r\n    const [items, setItems] = useState<Hit[]>([]);\r\n\r\n    const [favorites, setFavorites] = useState<Item[]>([]);\r\n \r\n    useEffect(() => {\r\n        fetchAllRecipes({q: \"\"}).then((data) => {\r\n            setItems(data)\r\n        })\r\n    },[])\r\n    \r\n \r\n    const fetchRecipes = ({query, health, calories, diet}: Query): void => {\r\n\r\n        // gluten option conversion\r\n        let glutenOption = \"\";\r\n        if (health?.gluten){\r\n            glutenOption = \"gluten-free\"\r\n        } else {\r\n            glutenOption = \"\";\r\n        }\r\n        \r\n        // vegetarian option conversion\r\n        let vegetarianOption = \"\";\r\n        if (health?.vegetarian){\r\n            vegetarianOption = \"vegetarian\"\r\n        }\r\n\r\n        // calorie count conversion from string to integer\r\n        let caloriesAmount = calories;\r\n\r\n        let balancedOption = \"\";\r\n        if (diet?.balanced){\r\n            balancedOption = \"balanced\"\r\n        }\r\n        let lowFatOption = \"\"\r\n        if (diet?.lowFat){\r\n            lowFatOption = \"low-fat\"\r\n        }\r\n\r\n        // object that will be used to filter the data in the fetch.\r\n        const parameters: QueryParams = {\r\n            q: query\r\n        }\r\n        console.log(parameters)\r\n        // adding each additional parameter key to the parameters object if it exists so there is no an empty string when it passes through.\r\n        // have to check each to make sure each is true in combinations so it goes into the string array. This will add many more combinations for each additional option.\r\n        if (glutenOption && !vegetarianOption){\r\n            parameters.health = [glutenOption]\r\n        } else if (!glutenOption && vegetarianOption){\r\n            parameters.health = [vegetarianOption]\r\n        } else if (glutenOption && vegetarianOption){\r\n            parameters.health = [glutenOption, vegetarianOption]\r\n        } \r\n\r\n        // checking for diet array of strings\r\n        if (balancedOption && !lowFatOption){\r\n            parameters.diet = [balancedOption]\r\n        } else if (!balancedOption && lowFatOption){\r\n            parameters.diet = [lowFatOption]\r\n        } else if (balancedOption && lowFatOption){\r\n            parameters.diet = [balancedOption, lowFatOption]\r\n        }\r\n\r\n        // checking if we need to add calorie count\r\n        if (caloriesAmount){\r\n            parameters.calories = parseInt(caloriesAmount);\r\n        }\r\n\r\n        fetchAllRecipes(parameters).then((data) => {\r\n            setItems(data);\r\n        })\r\n    }\r\n    // to be added to favorites section dependant on function call by click\r\n    const addFavorite = (item: Item): void => {\r\n        let newFavorites: Item[] = favorites;\r\n        newFavorites.push(item);\r\n        setFavorites(newFavorites);\r\n    }\r\n\r\n    // remove from favorites\r\n    const removeFavorite = (index: number): void => {\r\n        let newFavorites: Item[] = favorites;\r\n        newFavorites.splice(index, 1);\r\n        setFavorites(newFavorites);\r\n\r\n\r\n\r\n    }\r\n  \r\n    return (<ItemContext.Provider value={ {items, favorites, fetchRecipes, addFavorite, removeFavorite} }>\r\n                {children}\r\n            </ItemContext.Provider>)\r\n};\r\n","import { FormEvent, useContext, useState } from \"react\";\r\nimport './HomePageSearchStyles.css';\r\n\r\n// importing Item interface\r\n// importing Item interface to use as props for component\r\nimport { ItemContext } from \"../../Context/ItemContextProvider\";\r\n\r\n\r\nfunction HomePageSearch(){\r\n\r\n    // context provider //\r\n    const {items, fetchRecipes} = useContext(ItemContext);\r\n    \r\n    // states for the HomeSearch Page only //\r\n    const [searchData, setSearchData] = useState('')\r\n    const [healthOptions, setHealthOptions] = useState(\r\n        {\r\n        gluten: false,\r\n        vegetarian: false\r\n        }\r\n    );\r\n\r\n    const [calorieCount, setCalorieCount] = useState('')\r\n\r\n    const [dietaryOptions, setDietaryOptions] = useState({\r\n        balanced: false,\r\n        lowFat: false\r\n    })\r\n\r\n    // functions //\r\n    function handleSubmit(e: FormEvent){\r\n        e.preventDefault();\r\n        // query is type Query\r\n        fetchRecipes({query: searchData, health: healthOptions, calories: calorieCount, diet: dietaryOptions})\r\n    }\r\n\r\n    // when hitting the checkbox, start as false, when clicked, change to the opposite (true).\r\n    function glutenCheck(){\r\n        let glutenCheck = healthOptions.gluten;\r\n        setHealthOptions({gluten: !glutenCheck, vegetarian: healthOptions.vegetarian})\r\n    }\r\n\r\n    function vegetarianCheck(){\r\n        let vegetarianCheck = healthOptions.vegetarian;\r\n        setHealthOptions({gluten: healthOptions.gluten, vegetarian: !vegetarianCheck})\r\n    }\r\n\r\n    function balancedCheck(){\r\n        let balancedCheck = dietaryOptions.balanced;\r\n        setDietaryOptions({balanced: !balancedCheck, lowFat: dietaryOptions.lowFat})\r\n    }\r\n\r\n    function lowFatCheck(){\r\n        let lowFatCheck = dietaryOptions.lowFat;\r\n        setDietaryOptions({balanced: dietaryOptions.balanced, lowFat: !lowFatCheck})\r\n    }\r\n\r\n    console.log(calorieCount);\r\n    console.log(searchData);\r\n\r\n    return (\r\n        <div className=\"SearchContainer\">\r\n            <div className=\"FormContainer\">\r\n                <form className=\"mainForm\" action=\"submit\" onSubmit={handleSubmit}>\r\n                    <h3 className=\"fontTitles\">Search A Recipe</h3>\r\n                    <section className=\"SearchOptionSection\">\r\n                        <div className=\"SearchOptionsContainer\">\r\n                            <section className=\"healthOptions\">\r\n                                <p className=\"optionsTitles\">Health Options</p>\r\n                                <div className=\"checkboxContainer\">\r\n                                    <input type=\"checkbox\" id=\"gluten-free\" name=\"health-labels\" value=\"gluten-free\" checked={healthOptions.gluten} onClick={glutenCheck}/>\r\n                                    <label className=\"fontLabels\" htmlFor=\"gluten-free\">Gluten Free</label>\r\n                                </div>\r\n                                <div className=\"checkboxContainer\">\r\n                                    <input type=\"checkbox\" id=\"vegetarian\" name=\"health-labels\" value=\"vegetarian\" checked={healthOptions.vegetarian} onClick={vegetarianCheck}/>\r\n                                    <label className=\"fontLabels\" htmlFor=\"vegetarian\">Vegetarian</label>\r\n                                </div>\r\n                            </section>\r\n                            <section className=\"healthOptions\">\r\n                                <p className=\"optionsTitles\">Diet Options</p>\r\n                                <div className=\"checkboxContainer\">\r\n                                    <input type=\"checkbox\" id=\"balanced\" name=\"health-labels\" value=\"balanced\" checked={dietaryOptions.balanced} onClick={balancedCheck}/>\r\n                                    <label className=\"fontLabels\" htmlFor=\"balanced\">Balanced</label>\r\n                                </div>\r\n                                <div className=\"checkboxContainer\">\r\n                                    <input type=\"checkbox\" id=\"low-fat\" name=\"health-labels\" value=\"low-fat\" checked={dietaryOptions.lowFat} onClick={lowFatCheck}/>\r\n                                    <label className=\"fontLabels\" htmlFor=\"low-fat\">Low-Fat</label>\r\n                                </div>\r\n                            </section>\r\n                            <section className=\"healthOptions\">\r\n                                <div className=\"calorie-and-count optionsTitles\">\r\n                                    <label className=\"optionsTitles calorieTitleLabel\" htmlFor=\"calories\">Calorie Limit: {calorieCount}</label>\r\n                                </div>\r\n                                <div className=\"calorieContainer\">\r\n                                    <input type=\"range\" id=\"calories\" name=\"calories\" min=\"0\" max=\"1000\"  step=\"50\" value={calorieCount} onChange= { (e) => setCalorieCount(e.target.value) }/>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                        <div className=\"searchButtonDiv\">\r\n                            <label className=\"searchLabel fontLabels\" htmlFor=\"search\">Search:</label>\r\n                            <input className=\"searchInput\" type=\"text\" name=\"search\" id=\"search\" value={searchData} onChange={ (e) => setSearchData(e.target.value) }/>\r\n                        </div>\r\n                    </section>\r\n                    <div className=\"SubmitButtonContainer\">\r\n                        <button className=\"SubmitButton\"type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomePageSearch;","import { Link } from \"react-router-dom\";\r\n\r\n// importing Item interface to use as props for component\r\nimport {Item} from \"../../Model/ItemInterface\";\r\n\r\n// import css\r\nimport \"./Item.css\";\r\n\r\n// sets Prop item as Item determined by ItemInterface model\r\ninterface Props {\r\n    item: Item;\r\n}\r\n\r\nconst ItemComponent = ({item}: Props) => {\r\n    // returns individual item component as set by props, to be laid out as defined below\r\n    // with properties as set in ItemInterface model\r\n    return (\r\n        <Link className=\"ItemWrapper\" to={`/DetailedItem/${item.label}`}>\r\n            <div className=\"ItemWrapperTop\">\r\n                <img className=\"ItemImage\" src={item.image} alt=\"food-pic\"/>\r\n                <h3 className=\"cardHead\">{item.label}</h3>\r\n            </div>\r\n            <div className=\"ItemWrapperMiddle\">\r\n                <div className=\"ItemInfoBottom\">\r\n                    <p className=\"ItemInfoBit\">Servings</p>\r\n                    <div className=\"NumberBubble\">{item.yield}</div>\r\n                </div>\r\n                <span>|</span>\r\n                <div className=\"ItemInfoBottom\">\r\n                    <p className=\"ItemInfoBit\">Calories</p>\r\n                    <div className=\"NumberBubble\">{(item.calories / item.yield).toFixed(0)}</div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemComponent;","import { ItemContext } from \"../../Context/ItemContextProvider\";\r\n\r\nimport { useContext } from \"react\";\r\nimport Item from \"../Item/Item\";\r\n\r\n// css\r\nimport \"./FoundItemsStyles.css\";\r\n\r\nfunction FoundItems(){\r\n    const { items } = useContext(ItemContext);\r\n    \r\n    return (\r\n        \r\n        <div className=\"FoundItemsWrapper\">  \r\n            {items.map((item, index) => \r\n                <Item \r\n                    key={`${item.recipe.label}-${index}`}\r\n                    item={item.recipe}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FoundItems;","export default __webpack_public_path__ + \"static/media/to-favorite.4041efc8.svg\";","export default __webpack_public_path__ + \"static/media/favorited.3a444dac.svg\";","export default __webpack_public_path__ + \"static/media/expand.e0356ddd.svg\";","import \"./TriangleBorderStyles.css\";\r\n\r\nconst TriangleBorder = () => (\r\n\r\n    <div className=\"BorderWrapper\">\r\n        <div className=\"InnerLeftBar\"></div>\r\n        <div className=\"InnerBottomTriangle\"></div>\r\n        <div className=\"InnerBottomBar\"></div>\r\n\r\n        <div className=\"OuterLeftBar\"></div>\r\n        <div className=\"OuterBottomTriangle\"></div>\r\n        <div className=\"OuterBottomBar\"></div>\r\n    </div>\r\n)\r\n\r\n\r\n\r\nexport default TriangleBorder;","import { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { ItemContext } from \"../../Context/ItemContextProvider\";\r\nimport {Hit} from \"../../Model/ItemInterface\";\r\n\r\n// css\r\nimport \"./DetailedItemStyles.css\";\r\n\r\n// import icons\r\nimport tofavoriteIcon from \"../../Icons/to-favorite.svg\";\r\nimport favoritedIcon from \"../../Icons/favorited.svg\";\r\nimport expand from \"../../Icons/expand.svg\";\r\nimport { isGetAccessorDeclaration, setConstantValue } from \"typescript\";\r\nimport TriangleBorder from \"../TriangleBorder/TriangleBorder\";\r\n\r\ninterface RouteParams {\r\n    label: string\r\n}\r\n\r\nfunction DetailedItem(){\r\n    // instantiate context\r\n    const {items, addFavorite, removeFavorite, favorites} = useContext(ItemContext);\r\n    const {label} = useParams<RouteParams>();\r\n\r\n    // for handling icon display\r\n    const [icon, setIcon] = useState(tofavoriteIcon);\r\n\r\n    // displays the item chosen from initial search page based on a name (label) match\r\n    const foundItem: Hit | undefined = items.find((item) => item.recipe.label === label);\r\n    \r\n    // checks if recipe is already favorited and sets icon accordingly --- useEffect stops from cycling into infinite loop\r\n    useEffect(() => {\r\n        foundItem?.recipe.favorite ? setIcon(favoritedIcon) : setIcon(tofavoriteIcon);\r\n    },[foundItem?.recipe.favorite])\r\n    \r\n\r\n    // active states for health and ingredient display expansion\r\n    const [isActive, setActive] = useState(false);\r\n    const [isAlsoActive, setAlsoActive] = useState(false);\r\n   \r\n    //  handle adding/removing favorites   \r\n    const handleFavorites = () => {\r\n\r\n        let index = -1;\r\n        if (foundItem?.recipe){\r\n            \r\n            // if recipe is favorited, will unfavorite and vice versa\r\n            foundItem.recipe.favorite = !foundItem.recipe.favorite;\r\n            \r\n            // if recipe is favorited icon sets to favorited\r\n            foundItem.recipe.favorite ? setIcon(favoritedIcon) : setIcon(tofavoriteIcon);\r\n            \r\n            // to get index for removal from favorites\r\n            for (const favorite of favorites) {\r\n                index++;\r\n                if  (foundItem.recipe.label === favorite.label) {\r\n                    \r\n                    break;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n            \r\n            // to add item to favorites\r\n            foundItem.recipe.favorite ? addFavorite(foundItem.recipe) : removeFavorite(index);\r\n            index = -1;\r\n            \r\n        }\r\n    }\r\n\r\n    // image variable & initial check to determine which icon to show -- to-favorite or favorited\r\n    let background = `${foundItem?.recipe.image}`;\r\n    \r\n    // changing hyphenated healthLabels from API to spaces instead\r\n    const healthLabel: string[] | undefined = foundItem?.recipe.healthLabels;\r\n    const healthLabelSplit: string | undefined = healthLabel?.join(\", \");\r\n\r\n    // variable for changing ingredient list from comma formatting to bulleted list -- to be used below in return\r\n    const ingredientList: string[] | undefined = foundItem?.recipe.ingredientLines;\r\n\r\n    // variable for button click to take user to actual recipe page externally\r\n    const link: string = foundItem ? foundItem.recipe.url : \"\";\r\n\r\n    return (\r\n        <div className=\"DetailedItemWrapperImage\" style={{backgroundImage: `url(${background})`}}>\r\n            <TriangleBorder/>\r\n            <div className=\"DetailedItemWrapper\">\r\n                <div className=\"DetailedItemImageAndTitleWrapper\">\r\n                    <img className=\"HiddenImage\"src={foundItem?.recipe.image} alt=\"food-pic\"/>\r\n                    <h2 className=\"DetailedHeaderText\">{foundItem?.recipe.label}</h2>\r\n                </div>\r\n                <div className=\"DetailsWrapper\">\r\n                    <div className=\"DetailedItemInfoWrapper\">\r\n                        <p className=\"DetailedItemInfoBit DetailedItemText\">Servings</p>\r\n                        <p className=\"DetailedItemInfoBit DetailedItemText\">Calories</p>\r\n                        <p className=\"DetailedItemInfoBit DetailedItemText\">PrepTime</p>\r\n                    </div>\r\n                    <div className=\"DetailedItemBubbleWrapper\">\r\n                        <div className=\"DetailedNumberBubble\">{foundItem?.recipe.yield}</div>\r\n                        <div className=\"DetailedNumberBubble\">{(foundItem ? (foundItem.recipe.calories / foundItem.recipe.yield).toFixed(0) : \"\")}</div>\r\n                        <div className=\"DetailedNumberBubble\">{foundItem?.recipe.totalTime}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"DetailedItemHealthLabels\">\r\n                    {/* VV if dietlabels exist, display below. otherwise nothing displays */}\r\n                    {foundItem?.recipe.dietLabels ? <p className=\"DetailedItemText\"><b className=\"DetailedItemText\">Diet Labels:</b> {foundItem?.recipe.dietLabels}</p> : null}\r\n                </div>\r\n                <div className={isActive ? \"Accordion\" : \"DetailedItemDietLabels\"} onClick={() => {setActive(!isActive)}} >\r\n                    <p className=\"DetailedItemText\" ><b className=\"DetailedItemText\">Health Labels: </b>{healthLabelSplit}</p>\r\n                    <img src={expand} alt=\"see more\"/>\r\n                </div>\r\n                <div className={isAlsoActive ? \"Accordion\" : \"DetailedItemIngredients\"} onClick={() => {setAlsoActive(!isAlsoActive)}}>\r\n                    <p className=\"DetailedItemText\"><b className=\"DetailedItemText\">Ingredients:</b> \r\n                        {ingredientList?.map((ingredient, index) =>\r\n                            <li className=\"DetailedItemText\" key={`${ingredient}-${index}`}>\r\n                                {ingredient}\r\n                            </li>\r\n                        )}\r\n                    </p>\r\n                    <img src={expand} alt=\"see more\"/>\r\n                </div>\r\n                <div className=\"DetailedItemFooter\">\r\n                    <Link to=\"/\"><button className=\"backButton\">Back</button></Link>\r\n                    <Link className=\"DetailedRecipeButton\" target=\"blank\" to={{pathname: link}}>Recipe</Link>\r\n                    <img className=\"DetailedItemfavoriteIcon\" src={icon} alt=\"favorite-icon\" onClick={() => {handleFavorites()}}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailedItem;\r\n\r\n","import { useContext } from \"react\";\r\nimport { ItemContext } from \"../../Context/ItemContextProvider\";\r\nimport Item from \"../Item/Item\";\r\n\r\nimport \"./FavoritesStyles.css\";\r\n\r\nfunction Favorites(){\r\n    const {favorites} = useContext(ItemContext);\r\n    console.log(\"favorites from Favorites Component\", favorites);\r\n    return (\r\n        <div className=\"FavoritesWrapper\">\r\n            <h2 className=\"PaddingParagraph\">Favorites</h2>\r\n            {favorites.map((item, index) => \r\n                <Item \r\n                    key={`${item.label}-${index}`}\r\n                    item={item}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites;\r\n","import './App.css';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Header from './Components/Header/Header';\r\nimport HomePageSearch from './Components/HomePageSearch/HomePageSearch';\r\nimport { ItemContextProvider } from './Context/ItemContextProvider';\r\nimport FoundItems from './Components/FoundItems/FoundItems';\r\nimport DetailedItem from './Components/DetailedItem/DetailedItem';\r\nimport Favorites from './Components/Favorites/Favorites';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <Switch>\r\n          {/* home */}\r\n          <Route path=\"/\" exact>\r\n            <ItemContextProvider>\r\n              <HomePageSearch />\r\n              <FoundItems /> \r\n            </ItemContextProvider>\r\n          </Route>\r\n        \r\n          <Route path=\"/DetailedItem/:label\" exact>\r\n            <ItemContextProvider>\r\n              <DetailedItem />\r\n            </ItemContextProvider>\r\n          </Route>\r\n\r\n          <Route path=\"/Favorites\" exact>\r\n            <ItemContextProvider>\r\n              <Favorites />\r\n            </ItemContextProvider>\r\n          </Route>\r\n      </Switch>\r\n        \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// SAVE FOR LATER? Application ID = 267596f9\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './Components/Header/HeaderStyles.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}